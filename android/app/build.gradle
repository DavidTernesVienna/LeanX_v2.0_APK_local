apply plugin: 'com.android.application'

android {
    namespace "com.david.leanx"
    compileSdk rootProject.ext.compileSdkVersion

    signingConfigs {
        release {
            // Keystore liegt eine Ebene über dem app/-Ordner (in android/)
            storeFile file("../leanx-upload.jks")
        storePassword System.getenv("LEANX_STORE_PW")
        keyAlias "leanx-upload"
        keyPassword System.getenv("LEANX_KEY_PW")
        }
    }

    defaultConfig {
        applicationId "com.david.leanx"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        aaptOptions {
            // Dateien/Ordner ignorieren (für WebAssets sinnvoll)
            ignoreAssetsPattern '!.svn:!.git:!.ds_store:!*.scc:.*:!CVS:!thumbs.db:!picasa.ini:!*~'
        }
    }

    // Java 17 für dieses Modul
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
        coreLibraryDesugaringEnabled true
    }

    buildTypes {
        // Debug und Release parallel installierbar (unterschiedliche Package-IDs)
        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
            debuggable true
        }
        release {
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

repositories {
    flatDir {
        dirs '../capacitor-cordova-android-plugins/src/main/libs', 'libs'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    implementation "androidx.appcompat:appcompat:$androidxAppCompatVersion"
    implementation "androidx.coordinatorlayout:coordinatorlayout:$androidxCoordinatorLayoutVersion"
    implementation "androidx.core:core-splashscreen:$coreSplashScreenVersion"

    implementation project(':capacitor-android')
    implementation project(':capacitor-cordova-android-plugins')

    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "androidx.test.ext:junit:$androidxJunitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$androidxEspressoCoreVersion"

    // Für Java-APIs (z. B. java.time) auf minSdk 23
    coreLibraryDesugaring "com.android.tools:desugar_jdk_libs:2.0.4"
}

apply from: 'capacitor.build.gradle'

// Google Services nur, wenn Datei vorhanden ist
try {
    def servicesJSON = file('google-services.json')
    if (servicesJSON.text) {
        apply plugin: 'com.google.gms.google-services'
    }
} catch (Exception e) {
    logger.info("google-services.json not found, google-services plugin not applied. Push Notifications won't work")
}

/* -----------------------------
   Kotlin jvmTarget NUR setzen,
   wenn das Kotlin-Plugin aktiv ist.
   (vermeidet „unknown property 'org'“)
------------------------------*/

plugins.withId("org.jetbrains.kotlin.android") {
    tasks.withType((Class) Class.forName("org.jetbrains.kotlin.gradle.tasks.KotlinCompile")).configureEach {
        kotlinOptions { jvmTarget = "17" }
    }
}
plugins.withId("kotlin-android") {
    tasks.withType((Class) Class.forName("org.jetbrains.kotlin.gradle.tasks.KotlinCompile")).configureEach {
        kotlinOptions { jvmTarget = "17" }
    }
}
